[user]
   # These values determine what ends up in the <author> and <committer> fields of commit objects
	name = Grant Holland
	email = gwholland3@gmail.com
[core]
   # Do not automatically convert line endings in the working directory to CRLF
	autocrlf = input
[color]
   # Use color when outputting to the terminal
	ui = auto
[alias]
   # Very pretty logging output
	lg = log --graph --branches --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --author-date-order

   # Show the last commit that touched a file, even if that file has been deleted (relative to HEAD)
	delCommit = log -1 --

   # Alias for checking if the current working directory is in a git repo. This command should output
   # the typical git error message if not in a repo. Otherwise, it outputs nothing.
   in-repo = rev-parse

   # Output the name of the repo's default branch
   mainb = !git in-repo && basename $(git symbolic-ref --short refs/remotes/origin/HEAD)

   # Fetch from origin AND update the default branch locally, but remain on the original branch from which you ran the command
	sync = !git in-repo && git checkout $(git mainb) && git pull -p && git checkout -

   # Squash all the commits on the current feature branch into one, keeping the commit message of the first
   squash = !git in-repo && git reset --soft $(git merge-base HEAD $(git mainb)) && git commit -m \"$(git log --reverse --format=%B HEAD..HEAD@{1} | head -n 1)\"

   # Force push, but only if the remote branch hasn't been updated since the last fetch and its tip is still contained in the overriding branch
	pushfl = push --force-with-lease --force-if-includes

   # Amend most recent commit with current changes and keep the same commit message
   fixup = commit --amend --no-edit
[pull]
   # When running git pull, do not rebase current branch on top of upstream branch should it have diverged
	rebase = false
[init]
   # Override the default branch name when initializing a new Git repository
	defaultBranch = main
[grep]
   # Always show line numbers in output of git grep
	lineNumber = true
[push]
   # Automatically set up an upstream tracking branch when running `git push` on a local-only branch
	autoSetupRemote = true
